@inherits LayoutComponentBase

<MudThemeProvider
    @ref="_mudTheProvider"
    @bind-IsDarkMode="_isDarkMode" 
    Theme="Configuration.Theme" 
/>
<MudSnackbarProvider />
<MudDialogProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton 
                    Icon="@Icons.Material.Filled.Menu" 
                    Color="Color.Inherit"
                    Edge="Edge.Start"
                    OnClick="ToggleDrawer"
                />
                Dima
                <MudSpacer />
                <MudSwitch 
                    @bind-Value="@_isDarkMode"
                    T="bool"
                    Color="Color.Inherit"
                    Class="ma-4"
                    ThumbIcon="@Icons.TwoTone.LightbulbCircle"
                />
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
            </MudAppBar>
            <MudDrawer @bind-Open="@_isDrawerOpened">
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudTheProvider = null!;

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudTheProvider.GetSystemPreference();
            await _mudTheProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer() 
        => _isDrawerOpened = !_isDrawerOpened;
}
